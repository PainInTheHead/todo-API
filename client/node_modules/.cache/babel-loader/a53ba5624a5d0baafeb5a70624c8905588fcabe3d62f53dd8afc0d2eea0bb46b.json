{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst token = localStorage.getItem('token');\naxios.defaults.headers.common['Authorization'] = token;\nexport const getTodos = createAsyncThunk(\"todos/getTodos\", async () => {\n  const response = await axios.get(\"http://localhost:3001/todos/todo\");\n  return response.data;\n});\nexport const addTodo = createAsyncThunk(\"todos/addTodo\", async title => {\n  const response = await axios.post(\"http://localhost:3001/todos/todo\", {\n    title: title\n  });\n  return response.data;\n});\nexport const deletedTodo = createAsyncThunk(\"todos/deletedTodo\", async id => {\n  const response = await axios.delete(`http://localhost:3001/todos/todo/${id}`);\n  return response.data;\n});\nexport const clearAllTodo = createAsyncThunk('clearAllTodo', async () => {\n  const response = await axios.delete(`http://localhost:3001/todos/clearholder`);\n  return response.data;\n});\nexport const clearComplited = createAsyncThunk(\"clearComplited\", async () => {\n  const response = await axios.delete(`http://localhost:3001/todos/clearComplited`);\n  return response.data;\n});\nexport const setDoneTodo = createAsyncThunk(\"todos/setDoneTodo\", async id => {\n  const response = await axios.put(`http://localhost:3001/todos/todo/${id}`);\n  return response.data;\n});\nexport const allSelect = createAsyncThunk(\"allSelect\", async () => {\n  const response = await axios.put(`http://localhost:3001/todos/allselected`);\n  return response.data;\n});\nexport const setEditTodo = createAsyncThunk(\"todos/setEditTodo\", async payload => {\n  const response = await axios.put(`http://localhost:3001/todos/edit/${payload.id}`, {\n    title: payload.title\n  });\n  return response.data;\n});\nexport const authorization = createAsyncThunk(\"user/log\", async payload => {\n  const response = await axios.post(`http://localhost:3001/user/login`, {\n    email: payload.email,\n    password: payload.password\n  });\n  return response.data;\n});\nconst initialState = {\n  todos: [],\n  filter: \"all\",\n  status: null,\n  error: null\n};\nconst todoSlice = createSlice({\n  name: \"todos\",\n  initialState,\n  reducers: {\n    editTitleTodo(state, action) {\n      const editTodo = state.todos.find(todo => todo._id === action.payload.id);\n      if (editTodo) {\n        editTodo.title = action.payload.title;\n      }\n    },\n    editorTodo(state, action) {\n      const editTodo = state.todos.find(todo => todo._id === action.payload);\n      if (editTodo) {\n        editTodo.isEdit = !editTodo.isEdit;\n      }\n    },\n    openFiltered(state, action) {\n      state.filter = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getTodos.pending, state => {\n      state.status = \"loading\";\n    }).addCase(getTodos.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.todos = action.payload;\n    }).addCase(addTodo.pending, state => {\n      state.status = \"loading\";\n    }).addCase(addTodo.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.todos.push(action.payload);\n    }).addCase(addTodo.rejected, state => {\n      state.status = \"failed\";\n    }).addCase(deletedTodo.pending, state => {\n      state.status = \"loading\";\n    }).addCase(deletedTodo.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.todos = state.todos.filter(todo => todo._id !== action.payload._id);\n    }).addCase(setDoneTodo.pending, state => {\n      state.status = \"loading\";\n    }).addCase(setDoneTodo.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      const toggledtodo = state.todos.find(todo => todo._id === action.payload._id);\n      if (toggledtodo) {\n        toggledtodo.done = !toggledtodo.done;\n      }\n    }).addCase(setEditTodo.pending, state => {\n      state.status = \"loading\";\n    }).addCase(setEditTodo.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      const editTodo = state.todos.find(todo => todo._id === action.payload._id);\n      if (editTodo) {\n        editTodo.title = action.payload.title;\n      }\n    }).addCase(clearAllTodo.pending, state => {\n      state.status = \"loading\";\n    }).addCase(clearAllTodo.fulfilled, state => {\n      state.status = \"succeeded\";\n      state.todos = [];\n    }).addCase(clearComplited.pending, state => {\n      state.status = \"loading\";\n    }).addCase(clearComplited.fulfilled, state => {\n      state.status = \"succeeded\";\n      const filteredTodo = state.todos.filter(todo => !todo.done);\n      state.todos = filteredTodo;\n    }).addCase(allSelect.pending, state => {\n      state.status = \"loading\";\n    }).addCase(allSelect.fulfilled, state => {\n      state.status = \"succeeded\";\n      const allDone = state.todos.every(todo => todo.done);\n      state.todos = state.todos.map(todo => {\n        return {\n          ...todo,\n          done: !allDone\n        };\n      });\n    }).addCase(authorization.pending, state => {\n      state.status = \"loading\";\n    }).addCase(authorization.fulfilled, state => {\n      state.status = \"succeeded\";\n    });\n  }\n});\nexport const {\n  editTitleTodo,\n  editorTodo,\n  openFiltered\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","token","localStorage","getItem","defaults","headers","common","getTodos","response","get","data","addTodo","title","post","deletedTodo","id","delete","clearAllTodo","clearComplited","setDoneTodo","put","allSelect","setEditTodo","payload","authorization","email","password","initialState","todos","filter","status","error","todoSlice","name","reducers","editTitleTodo","state","action","editTodo","find","todo","_id","editorTodo","isEdit","openFiltered","extraReducers","builder","addCase","pending","fulfilled","push","rejected","toggledtodo","done","filteredTodo","allDone","every","map","actions","reducer"],"sources":["/home/fusion-team/Intern/Node/TODO/client/src/store/todoSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { stat } from \"fs\";\nconst token = localStorage.getItem('token');\naxios.defaults.headers.common['Authorization'] = token;\n\nexport const getTodos = createAsyncThunk(\"todos/getTodos\", async () => {\n  const response = await axios.get(\"http://localhost:3001/todos/todo\")\n  return response.data;\n});\n\nexport const addTodo = createAsyncThunk(\n  \"todos/addTodo\",\n  async (title: string) => {\n    const response = await axios.post(\"http://localhost:3001/todos/todo\", {\n      title: title,\n    });\n    return response.data;\n  }\n);\n\nexport const deletedTodo = createAsyncThunk(\n  \"todos/deletedTodo\",\n  async (id: any) => {\n    const response = await axios.delete(`http://localhost:3001/todos/todo/${id}`);\n    return response.data;\n  }\n);\n\nexport const clearAllTodo = createAsyncThunk(\n  'clearAllTodo',\n  async () => {\n    const response = await axios.delete(`http://localhost:3001/todos/clearholder`)\n    return response.data\n  }\n)\nexport const clearComplited = createAsyncThunk(\n  \"clearComplited\",\n  async () => {\n    const response = await axios.delete(`http://localhost:3001/todos/clearComplited`);\n    return response.data;\n  }\n);\n\nexport const setDoneTodo = createAsyncThunk(\n  \"todos/setDoneTodo\",\n  async (id: any) => {\n    const response = await axios.put(`http://localhost:3001/todos/todo/${id}`);\n    return response.data;\n  }\n);\n\nexport const allSelect = createAsyncThunk(\n  \"allSelect\",\n  async () => {\n    const response = await axios.put(`http://localhost:3001/todos/allselected`);\n    return response.data;\n  }\n);\n\n\nexport const setEditTodo = createAsyncThunk(\n  \"todos/setEditTodo\",\n  async (payload: {id: any, title: string}) => {\n    const response = await axios.put(`http://localhost:3001/todos/edit/${payload.id}`, { title: payload.title });\n    return response.data;\n  }\n);\n\nexport const authorization = createAsyncThunk(\n  \"user/log\",\n  async (payload: {email :any , password: any}) => {\n    const response = await axios.post(`http://localhost:3001/user/login`, {email : payload.email, password: payload.password})\n    return response.data\n  }\n)\n\ninterface Todo {\n  _id: any;\n  title: string;\n  done: boolean;\n  isEdit: boolean;\n}\n\ninterface TodosState {\n  todos: Todo[];\n  filter: string;\n  status: null | string;\n  error: null | string;\n}\n\nconst initialState: TodosState = {\n  todos: [],\n  filter: \"all\",\n  status: null,\n  error: null,\n};\n\nconst todoSlice = createSlice({\n  name: \"todos\",\n  initialState,\n\n  reducers: {\n    editTitleTodo(state, action: PayloadAction<{ id: any; title: string }>) {\n      const editTodo = state.todos.find(\n        (todo) => todo._id === action.payload.id\n      );\n      if (editTodo) {\n        editTodo.title = action.payload.title;\n      }\n    },\n\n    editorTodo(state, action: PayloadAction<any>) {\n      const editTodo = state.todos.find((todo) => todo._id === action.payload);\n      if (editTodo) {\n        editTodo.isEdit = !editTodo.isEdit;\n      }\n    },\n\n    openFiltered(state, action) {\n      state.filter = action.payload;\n    },\n  },\n\n  extraReducers: (builder) => {\n    builder.\n    addCase(getTodos.pending, (state) => {\n      state.status = \"loading\";\n    })\n    .addCase(getTodos.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.todos = action.payload;\n    })\n    .addCase(addTodo.pending, (state) => {\n      state.status = \"loading\";\n    })\n    .addCase(addTodo.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.todos.push(action.payload);\n    })\n    .addCase(addTodo.rejected, (state) => {\n      state.status = \"failed\";\n    })\n    .addCase(deletedTodo.pending, (state) => {\n      state.status = \"loading\";\n    })\n    .addCase(deletedTodo.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.todos = state.todos.filter(\n        (todo) => todo._id !== action.payload._id\n      );\n    })\n    .addCase(setDoneTodo.pending, (state) => {\n      state.status = \"loading\";\n    })\n    .addCase(setDoneTodo.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      const toggledtodo = state.todos.find(\n        (todo) => todo._id === action.payload._id\n      );\n      if (toggledtodo) {\n        toggledtodo.done = !toggledtodo.done;\n      }\n    })\n    .addCase(setEditTodo.pending, (state) => {\n      state.status = \"loading\";\n    })\n    .addCase(setEditTodo.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      const editTodo = state.todos.find(\n        (todo) => todo._id === action.payload._id\n      );\n      if (editTodo) {\n        editTodo.title = action.payload.title;\n      }\n    })\n    .addCase(clearAllTodo.pending, (state) => {\n      state.status = \"loading\";\n    })\n    .addCase(clearAllTodo.fulfilled, (state) => {\n      state.status = \"succeeded\";\n      state.todos = []\n    })\n    .addCase(clearComplited.pending, (state) => {\n      state.status = \"loading\";\n    })\n    .addCase(clearComplited.fulfilled, (state) => {\n      state.status = \"succeeded\";\n      const filteredTodo = state.todos.filter(todo => !todo.done)\n      state.todos = filteredTodo\n    })\n    .addCase(allSelect.pending, (state) => {\n      state.status = \"loading\";\n    })\n    .addCase(allSelect.fulfilled, (state) => {\n      state.status = \"succeeded\";\n      const allDone = state.todos.every((todo) => todo.done);\n      state.todos = state.todos.map((todo) => {\n        return { ...todo, done: !allDone };\n      });\n    })\n    .addCase(authorization.pending, (state) => {\n      state.status = \"loading\"\n    })\n    .addCase(authorization.fulfilled, (state) => {\n      state.status = \"succeeded\"\n\n    })\n  },\n});\n\nexport const {\n  editTitleTodo,\n  editorTodo,\n  openFiltered,\n} = todoSlice.actions;\n\nexport default todoSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAuB,kBAAkB;AAC/E,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAC3CH,KAAK,CAACI,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAGL,KAAK;AAEtD,OAAO,MAAMM,QAAQ,GAAGR,gBAAgB,CAAC,gBAAgB,EAAE,YAAY;EACrE,MAAMS,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,kCAAkC,CAAC;EACpE,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;AAEF,OAAO,MAAMC,OAAO,GAAGZ,gBAAgB,CACrC,eAAe,EACf,MAAOa,KAAa,IAAK;EACvB,MAAMJ,QAAQ,GAAG,MAAMR,KAAK,CAACa,IAAI,CAAC,kCAAkC,EAAE;IACpED,KAAK,EAAEA;EACT,CAAC,CAAC;EACF,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMI,WAAW,GAAGf,gBAAgB,CACzC,mBAAmB,EACnB,MAAOgB,EAAO,IAAK;EACjB,MAAMP,QAAQ,GAAG,MAAMR,KAAK,CAACgB,MAAM,CAAE,oCAAmCD,EAAG,EAAC,CAAC;EAC7E,OAAOP,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMO,YAAY,GAAGlB,gBAAgB,CAC1C,cAAc,EACd,YAAY;EACV,MAAMS,QAAQ,GAAG,MAAMR,KAAK,CAACgB,MAAM,CAAE,yCAAwC,CAAC;EAC9E,OAAOR,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AACD,OAAO,MAAMQ,cAAc,GAAGnB,gBAAgB,CAC5C,gBAAgB,EAChB,YAAY;EACV,MAAMS,QAAQ,GAAG,MAAMR,KAAK,CAACgB,MAAM,CAAE,4CAA2C,CAAC;EACjF,OAAOR,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMS,WAAW,GAAGpB,gBAAgB,CACzC,mBAAmB,EACnB,MAAOgB,EAAO,IAAK;EACjB,MAAMP,QAAQ,GAAG,MAAMR,KAAK,CAACoB,GAAG,CAAE,oCAAmCL,EAAG,EAAC,CAAC;EAC1E,OAAOP,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMW,SAAS,GAAGtB,gBAAgB,CACvC,WAAW,EACX,YAAY;EACV,MAAMS,QAAQ,GAAG,MAAMR,KAAK,CAACoB,GAAG,CAAE,yCAAwC,CAAC;EAC3E,OAAOZ,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAGD,OAAO,MAAMY,WAAW,GAAGvB,gBAAgB,CACzC,mBAAmB,EACnB,MAAOwB,OAAiC,IAAK;EAC3C,MAAMf,QAAQ,GAAG,MAAMR,KAAK,CAACoB,GAAG,CAAE,oCAAmCG,OAAO,CAACR,EAAG,EAAC,EAAE;IAAEH,KAAK,EAAEW,OAAO,CAACX;EAAM,CAAC,CAAC;EAC5G,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMc,aAAa,GAAGzB,gBAAgB,CAC3C,UAAU,EACV,MAAOwB,OAAqC,IAAK;EAC/C,MAAMf,QAAQ,GAAG,MAAMR,KAAK,CAACa,IAAI,CAAE,kCAAiC,EAAE;IAACY,KAAK,EAAGF,OAAO,CAACE,KAAK;IAAEC,QAAQ,EAAEH,OAAO,CAACG;EAAQ,CAAC,CAAC;EAC1H,OAAOlB,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAgBD,MAAMiB,YAAwB,GAAG;EAC/BC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,KAAK;EACbC,MAAM,EAAE,IAAI;EACZC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGlC,WAAW,CAAC;EAC5BmC,IAAI,EAAE,OAAO;EACbN,YAAY;EAEZO,QAAQ,EAAE;IACRC,aAAaA,CAACC,KAAK,EAAEC,MAAiD,EAAE;MACtE,MAAMC,QAAQ,GAAGF,KAAK,CAACR,KAAK,CAACW,IAAI,CAC9BC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKJ,MAAM,CAACd,OAAO,CAACR,EACxC,CAAC;MACD,IAAIuB,QAAQ,EAAE;QACZA,QAAQ,CAAC1B,KAAK,GAAGyB,MAAM,CAACd,OAAO,CAACX,KAAK;MACvC;IACF,CAAC;IAED8B,UAAUA,CAACN,KAAK,EAAEC,MAA0B,EAAE;MAC5C,MAAMC,QAAQ,GAAGF,KAAK,CAACR,KAAK,CAACW,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKJ,MAAM,CAACd,OAAO,CAAC;MACxE,IAAIe,QAAQ,EAAE;QACZA,QAAQ,CAACK,MAAM,GAAG,CAACL,QAAQ,CAACK,MAAM;MACpC;IACF,CAAC;IAEDC,YAAYA,CAACR,KAAK,EAAEC,MAAM,EAAE;MAC1BD,KAAK,CAACP,MAAM,GAAGQ,MAAM,CAACd,OAAO;IAC/B;EACF,CAAC;EAEDsB,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACPC,OAAO,CAACxC,QAAQ,CAACyC,OAAO,EAAGZ,KAAK,IAAK;MACnCA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDiB,OAAO,CAACxC,QAAQ,CAAC0C,SAAS,EAAE,CAACb,KAAK,EAAEC,MAAM,KAAK;MAC9CD,KAAK,CAACN,MAAM,GAAG,WAAW;MAC1BM,KAAK,CAACR,KAAK,GAAGS,MAAM,CAACd,OAAO;IAC9B,CAAC,CAAC,CACDwB,OAAO,CAACpC,OAAO,CAACqC,OAAO,EAAGZ,KAAK,IAAK;MACnCA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDiB,OAAO,CAACpC,OAAO,CAACsC,SAAS,EAAE,CAACb,KAAK,EAAEC,MAAM,KAAK;MAC7CD,KAAK,CAACN,MAAM,GAAG,WAAW;MAC1BM,KAAK,CAACR,KAAK,CAACsB,IAAI,CAACb,MAAM,CAACd,OAAO,CAAC;IAClC,CAAC,CAAC,CACDwB,OAAO,CAACpC,OAAO,CAACwC,QAAQ,EAAGf,KAAK,IAAK;MACpCA,KAAK,CAACN,MAAM,GAAG,QAAQ;IACzB,CAAC,CAAC,CACDiB,OAAO,CAACjC,WAAW,CAACkC,OAAO,EAAGZ,KAAK,IAAK;MACvCA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDiB,OAAO,CAACjC,WAAW,CAACmC,SAAS,EAAE,CAACb,KAAK,EAAEC,MAAM,KAAK;MACjDD,KAAK,CAACN,MAAM,GAAG,WAAW;MAC1BM,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACR,KAAK,CAACC,MAAM,CAC7BW,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKJ,MAAM,CAACd,OAAO,CAACkB,GACxC,CAAC;IACH,CAAC,CAAC,CACDM,OAAO,CAAC5B,WAAW,CAAC6B,OAAO,EAAGZ,KAAK,IAAK;MACvCA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDiB,OAAO,CAAC5B,WAAW,CAAC8B,SAAS,EAAE,CAACb,KAAK,EAAEC,MAAM,KAAK;MACjDD,KAAK,CAACN,MAAM,GAAG,WAAW;MAC1B,MAAMsB,WAAW,GAAGhB,KAAK,CAACR,KAAK,CAACW,IAAI,CACjCC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKJ,MAAM,CAACd,OAAO,CAACkB,GACxC,CAAC;MACD,IAAIW,WAAW,EAAE;QACfA,WAAW,CAACC,IAAI,GAAG,CAACD,WAAW,CAACC,IAAI;MACtC;IACF,CAAC,CAAC,CACDN,OAAO,CAACzB,WAAW,CAAC0B,OAAO,EAAGZ,KAAK,IAAK;MACvCA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDiB,OAAO,CAACzB,WAAW,CAAC2B,SAAS,EAAE,CAACb,KAAK,EAAEC,MAAM,KAAK;MACjDD,KAAK,CAACN,MAAM,GAAG,WAAW;MAC1B,MAAMQ,QAAQ,GAAGF,KAAK,CAACR,KAAK,CAACW,IAAI,CAC9BC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKJ,MAAM,CAACd,OAAO,CAACkB,GACxC,CAAC;MACD,IAAIH,QAAQ,EAAE;QACZA,QAAQ,CAAC1B,KAAK,GAAGyB,MAAM,CAACd,OAAO,CAACX,KAAK;MACvC;IACF,CAAC,CAAC,CACDmC,OAAO,CAAC9B,YAAY,CAAC+B,OAAO,EAAGZ,KAAK,IAAK;MACxCA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDiB,OAAO,CAAC9B,YAAY,CAACgC,SAAS,EAAGb,KAAK,IAAK;MAC1CA,KAAK,CAACN,MAAM,GAAG,WAAW;MAC1BM,KAAK,CAACR,KAAK,GAAG,EAAE;IAClB,CAAC,CAAC,CACDmB,OAAO,CAAC7B,cAAc,CAAC8B,OAAO,EAAGZ,KAAK,IAAK;MAC1CA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDiB,OAAO,CAAC7B,cAAc,CAAC+B,SAAS,EAAGb,KAAK,IAAK;MAC5CA,KAAK,CAACN,MAAM,GAAG,WAAW;MAC1B,MAAMwB,YAAY,GAAGlB,KAAK,CAACR,KAAK,CAACC,MAAM,CAACW,IAAI,IAAI,CAACA,IAAI,CAACa,IAAI,CAAC;MAC3DjB,KAAK,CAACR,KAAK,GAAG0B,YAAY;IAC5B,CAAC,CAAC,CACDP,OAAO,CAAC1B,SAAS,CAAC2B,OAAO,EAAGZ,KAAK,IAAK;MACrCA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDiB,OAAO,CAAC1B,SAAS,CAAC4B,SAAS,EAAGb,KAAK,IAAK;MACvCA,KAAK,CAACN,MAAM,GAAG,WAAW;MAC1B,MAAMyB,OAAO,GAAGnB,KAAK,CAACR,KAAK,CAAC4B,KAAK,CAAEhB,IAAI,IAAKA,IAAI,CAACa,IAAI,CAAC;MACtDjB,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACR,KAAK,CAAC6B,GAAG,CAAEjB,IAAI,IAAK;QACtC,OAAO;UAAE,GAAGA,IAAI;UAAEa,IAAI,EAAE,CAACE;QAAQ,CAAC;MACpC,CAAC,CAAC;IACJ,CAAC,CAAC,CACDR,OAAO,CAACvB,aAAa,CAACwB,OAAO,EAAGZ,KAAK,IAAK;MACzCA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDiB,OAAO,CAACvB,aAAa,CAACyB,SAAS,EAAGb,KAAK,IAAK;MAC3CA,KAAK,CAACN,MAAM,GAAG,WAAW;IAE5B,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXK,aAAa;EACbO,UAAU;EACVE;AACF,CAAC,GAAGZ,SAAS,CAAC0B,OAAO;AAErB,eAAe1B,SAAS,CAAC2B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}