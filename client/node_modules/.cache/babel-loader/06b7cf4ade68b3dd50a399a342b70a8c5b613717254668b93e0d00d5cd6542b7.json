{"ast":null,"code":"var _jsxFileName = \"/home/fusion-team/Intern/Node/TODO/client/src/components/Form/Form.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAppDispatch } from \"../../hook\";\nimport { FormWrapper } from \"./Form.styles\";\nimport { addTodo, allSelect } from \"../../store/todoSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [value, setValue] = useState(\"\");\n  const dispatch = useAppDispatch();\n  const submitFormHandler = e => {\n    e.preventDefault();\n    if (!value) {\n      alert(\"Нельзя так\");\n    }\n    dispatch(addTodo(value));\n    setValue(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(FormWrapper, {\n    className: \"form\",\n    onSubmit: submitFormHandler,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-con\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-input-icon\",\n        type: \"button\",\n        onClick: () => {\n          dispatch(allSelect());\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./select.png\",\n          alt: \"select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        type: \"text\",\n        placeholder: \"your todo...\",\n        value: value,\n        onChange: e => setValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn-input-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./add.png\",\n          alt: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"MoJ9RmD4RVgSJSwjzW+JS1+DyfA=\", false, function () {\n  return [useAppDispatch];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","useAppDispatch","FormWrapper","addTodo","allSelect","jsxDEV","_jsxDEV","Form","_s","value","setValue","dispatch","submitFormHandler","e","preventDefault","alert","className","onSubmit","children","type","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","target","_c","$RefreshReg$"],"sources":["/home/fusion-team/Intern/Node/TODO/client/src/components/Form/Form.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useAppDispatch } from \"../../hook\";\nimport { FormWrapper } from \"./Form.styles\";\nimport { addTodo, allSelect } from \"../../store/todoSlice\";\n\nconst Form: React.FC = () => {\n  const [value, setValue] = useState(\"\");\n  const dispatch = useAppDispatch();\n\n  const submitFormHandler: React.FormEventHandler<HTMLFormElement> = (e) => {\n    e.preventDefault();\n    if (!value) {\n      alert(\"Нельзя так\");\n    }\n    dispatch(addTodo(value))\n    setValue(\"\");\n  };\n\n  return (\n    <FormWrapper className=\"form\" onSubmit={submitFormHandler}>\n      <div className=\"input-con\">\n        <button\n          className=\"btn-input-icon\"\n          type=\"button\"\n          onClick={() => {\n            dispatch(allSelect());\n          }}\n        >\n          <img src=\"./select.png\" alt=\"select\"/>\n        </button>\n        <input\n          className=\"form-input\"\n          type=\"text\"\n          placeholder=\"your todo...\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n        />\n        <button type=\"submit\" className=\"btn-input-icon\">\n          <img src=\"./add.png\" alt=\"add\"></img>\n        </button>\n      </div>\n    </FormWrapper>\n  );\n};\n\nexport default Form;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,YAAY;AAC3C,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,OAAO,EAAEC,SAAS,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,IAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMW,QAAQ,GAAGV,cAAc,CAAC,CAAC;EAEjC,MAAMW,iBAA0D,GAAIC,CAAC,IAAK;IACxEA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACL,KAAK,EAAE;MACVM,KAAK,CAAC,YAAY,CAAC;IACrB;IACAJ,QAAQ,CAACR,OAAO,CAACM,KAAK,CAAC,CAAC;IACxBC,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACEJ,OAAA,CAACJ,WAAW;IAACc,SAAS,EAAC,MAAM;IAACC,QAAQ,EAAEL,iBAAkB;IAAAM,QAAA,eACxDZ,OAAA;MAAKU,SAAS,EAAC,WAAW;MAAAE,QAAA,gBACxBZ,OAAA;QACEU,SAAS,EAAC,gBAAgB;QAC1BG,IAAI,EAAC,QAAQ;QACbC,OAAO,EAAEA,CAAA,KAAM;UACbT,QAAQ,CAACP,SAAS,CAAC,CAAC,CAAC;QACvB,CAAE;QAAAc,QAAA,eAEFZ,OAAA;UAAKe,GAAG,EAAC,cAAc;UAACC,GAAG,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACTpB,OAAA;QACEU,SAAS,EAAC,YAAY;QACtBG,IAAI,EAAC,MAAM;QACXQ,WAAW,EAAC,cAAc;QAC1BlB,KAAK,EAAEA,KAAM;QACbmB,QAAQ,EAAGf,CAAC,IAAKH,QAAQ,CAACG,CAAC,CAACgB,MAAM,CAACpB,KAAK;MAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACFpB,OAAA;QAAQa,IAAI,EAAC,QAAQ;QAACH,SAAS,EAAC,gBAAgB;QAAAE,QAAA,eAC9CZ,OAAA;UAAKe,GAAG,EAAC,WAAW;UAACC,GAAG,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAElB,CAAC;AAAClB,EAAA,CAtCID,IAAc;EAAA,QAEDN,cAAc;AAAA;AAAA6B,EAAA,GAF3BvB,IAAc;AAwCpB,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}